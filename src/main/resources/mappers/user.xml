<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.test.teamproject_back.repository.UserMapper">
    <resultMap id="userResultMap" type="org.test.teamproject_back.entity.User">
        <id property="id" column="user_id"></id>
        <result property="username" column="username"></result>
        <result property="name" column="name"></result>
        <result property="email" column="email"></result>
        <result property="password" column="password"></result>
        <result property="phoneNumber" column="phone_number"></result>
        <result property="img" column="img"></result>
        <collection property="userRoles" javaType="java.util.Set" resultMap="userRolesResultMap"></collection>
    </resultMap>
    <resultMap id="userRolesResultMap" type="org.test.teamproject_back.entity.UserRoles">
        <id property="id" column="user_roles_id"></id>
        <result property="userId" column="user_id"></result>
        <result property="roleId" column="role_id"></result>
        <association property="role" resultMap="roleResultMap"></association>
    </resultMap>
    <resultMap id="roleResultMap" type="org.test.teamproject_back.entity.Role">
        <id property="id" column="role_id"></id>
        <id property="name" column="role_name"></id>
    </resultMap>
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into users_tb
        values(0, #{username}, #{name}, #{email}, #{password}, #{phoneNumber}, #{img}, now())
    </insert>
    <select id="findByUsername" resultMap="userResultMap">
        select
            ut.user_id,
            ut.username,
            ut.name,
            ut.email,
            ut.phone_number,
            ut.password,
            urt.user_roles_id,
            urt.user_id,
            urt.role_id,
            rt.role_id,
            rt.name as role_name
        from
            users_tb ut
            left outer join user_roles_tb urt on (ut.user_id = urt.user_id)
            left outer join roles_tb rt on (rt.role_id = urt.role_id)
        where
            ut.username = #{username}
    </select>
    <select id="findById" resultMap="userResultMap">
        select
            ut.user_id,
            ut.username,
            ut.name,
            ut.email,
            ut.phone_number,
            ut.password,
            urt.user_roles_id,
            urt.user_id,
            urt.role_id,
            rt.role_id,
            rt.name as role_name
        from
            users_tb ut
            left outer join user_roles_tb urt on (ut.user_id = urt.user_id)
            left outer join roles_tb rt on (rt.role_id = urt.role_id)
        where
            ut.user_id = #{id}
    </select>
    <select id="findByName" resultType="java.lang.Integer">
        select
            count(*)
        from
            users_tb
        where
            name = #{name}
    </select>
    <select id="findAllUsersByRole" resultMap="userResultMap">
        select
            ut.user_id,
            ut.username,
            ut.name,
            ut.email,
            ut.phone_number,
            ut.password,
            urt.user_roles_id,
            urt.user_id,
            urt.role_id,
            rt.role_id,
            rt.name as role_name
        from
            users_tb ut
            left outer join user_roles_tb urt on (ut.user_id = urt.user_id)
            left outer join roles_tb rt on (rt.role_id = urt.role_id)
        where
            rt.name = #{roleName}
    </select>
</mapper>